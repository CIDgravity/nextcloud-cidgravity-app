name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Archive the repository excluding node_modules
        run: zip -r project-build.zip . -x "node_modules/**\*"

      - name: Get the latest tag
        id: get_latest_tag
        run: echo ::set-output name=tag::$(git describe --tags `git rev-list --tags --max-count=1`)

      - name: Calculate next tag
        id: calc_next_tag
        run: |
          latest_tag=${{ steps.get_latest_tag.outputs.tag }}
          if [ -z "$latest_tag" ]; then
            next_tag="v1.0.0"
          else
            IFS='.' read -r -a parts <<< "${latest_tag:1}"
            next_tag="v${parts[0]}.$((parts[1]+1)).0"
          fi
          echo ::set-output name=next_tag::$next_tag

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.calc_next_tag.outputs.next_tag }}
          release_name: Release ${{ steps.calc_next_tag.outputs.next_tag }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./project-build.zip
          asset_name: project-build.zip
          asset_content_type: application/zip
